package com.courtdata.court_data_fetcher.service;

import java.time.LocalDateTime;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.springframework.stereotype.Service;

import com.courtdata.court_data_fetcher.entity.CaseDetails;
import com.courtdata.court_data_fetcher.repository.QueryLogRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class CourtDataService {

	private final QueryLogRepository repository;

	public CaseDetails fetchCaseDetails(String caseType, String caseNumber, String filingYear) {
		CaseDetails details = new CaseDetails();
		try {
			// ✅ Delhi HC case status search URL
			String url = "https://delhihighcourt.nic.in/case-search"; // Replace with actual case search endpoint

			// ✅ Send POST request with form data
			Document doc = Jsoup.connect(url).userAgent("Mozilla/5.0").timeout(10000).data("case_type", caseType)
					.data("case_number", caseNumber).data("case_year", filingYear).post();

			// ✅ Parse actual values (CSS selectors depend on site structure)
			String filingDate = doc.select("td:contains(Filing Date) + td").text();
			String nextHearingDate = doc.select("td:contains(Next Hearing) + td").text();
			String parties = doc.select("td:contains(Parties) + td").text();
			String pdfLink = doc.select("a[href$=.pdf]").attr("abs:href");

			details.setCaseType(caseType);
			details.setCaseNumber(caseNumber);
			details.setFilingYear(filingYear);
			details.setFilingDate(filingDate.isEmpty() ? "Not Found" : filingDate);
			details.setNextHearingDate(nextHearingDate.isEmpty() ? "Not Found" : nextHearingDate);
			details.setParties(parties.isEmpty() ? "Not Found" : parties);
			details.setLatestOrderPDF(pdfLink.isEmpty() ? "Not Found" : pdfLink);

			details.setRawResponse(doc.outerHtml());
			details.setTimestamp(LocalDateTime.now());

			repository.save(details);
		} catch (Exception e) {
			e.printStackTrace();
			details.setCaseType(caseType);
			details.setCaseNumber(caseNumber);
			details.setFilingYear(filingYear);
			details.setParties("Error fetching data");
			details.setTimestamp(LocalDateTime.now());
			repository.save(details);
		}
		return details;
	}

}
